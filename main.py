from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
import openai
from pydantic import BaseModel
from dotenv import load_dotenv
import os

load_dotenv()

openai.api_key = os.getenv("OPENAI_API_KEY")
MODEL = os.getenv("OPENAI_MODEL", "gpt-3.5-turbo")  # ‚Üê —Ç—É—Ç –æ–±–∏—Ä–∞—î—Ç—å—Å—è –º–æ–¥–µ–ª—å

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

class Message(BaseModel):
    text: str

PROMPT_TEMPLATE = os.getenv("GPT_PROMPT")
START_OPTIONS = (
    "üîπ –ó —á–æ–≥–æ –ø–æ—á–Ω–µ–º–æ?\n"
    "1. –ü–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –¥—É–º–∫–∞–º–∏\n"
    "2. –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î"
)

START_INSTRUCTION = (
    "–Ø–∫—â–æ –í–∏ —Ö–æ—á–µ—Ç–µ –ø–æ—á–∞—Ç–∏ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –¥—É–º–∫–∞–º–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à—ñ—Ç—å ¬´1¬ª –∞–±–æ ¬´–ü–æ—á–∞—Ç–∏¬ª.\n"
    "–Ø–∫—â–æ —Å–ø–æ—á–∞—Ç–∫—É —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è, —è–∫ —Ü–µ –ø—Ä–∞—Ü—é—î ‚Äî –Ω–∞–ø–∏—à—ñ—Ç—å ¬´2¬ª –∞–±–æ ¬´–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î¬ª.\n"
    "–û–±–∏–¥–≤–∞ —à–ª—è—Ö–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ ‚Äî –≤–∏–±–µ—Ä—ñ—Ç—å —Ç–æ–π, —â–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å —Å–∞–º–µ –í–∞–º. "
    "–Ü –ø–∞–º‚Äô—è—Ç–∞–π—Ç–µ: –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —â–æ—Å—å –Ω–µ –∑–≥–∞–¥–∞—î—Ç—å—Å—è –≤—ñ–¥—Ä–∞–∑—É, —Ü–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ."
)


@app.post("/chat")
async def chat_with_gpt(msg: Message):
    user_input = msg.text.strip().lower()

    # üîπ –Ø–∫—â–æ —Ü–µ —Å—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é
    if user_input in ["–ø–æ—á–∞—Ç–∏", "1", "hi", "hello", "start", "—è–∫ —Ü–µ –ø—Ä–∞—Ü—é—î", "2"]:
        return {"reply": START_OPTIONS + "\n\n" + START_INSTRUCTION}

    # üîπ –Ü–Ω–∞–∫—à–µ ‚Äî –ø—Ä–∞—Ü—é—î–º–æ —è–∫ –∑–≤–∏—á–∞–π–Ω–æ
    full_prompt = PROMPT_TEMPLATE + "\n" + msg.text

    try:
        response = openai.ChatCompletion.create(
            model=MODEL,
            messages=[
                {"role": "system", "content": "–¢–∏ –¥—Ä—É–∂–Ω—ñ–π –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∏–π GPT-–±–æ—Ç."},
                {"role": "user", "content": full_prompt},
            ]
        )
        reply = response.choices[0].message.content
        return {"reply": reply}
    except Exception as e:
        return {"reply": f"–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}"}
